from aiogram import types, Bot
from aiogram.dispatcher.router import Router
from utils.dbhelper import Database
from utils.keyboards import get_back_keyboard, get_start_menu_keyboard
import datetime
from aiogram.filters.command import CommandStart
from settings import TOKEN


# –≠–∫–∑–µ–º–ø–ª—è—Ä Router –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
router = Router()
# –≠–∫–∑–µ–º–ø–ª—è—Ä Database –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
db = Database()
# –≠–∫–∑–µ–º–ø–ª—è—Ä Bot –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
bot = Bot(token=TOKEN)
#–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@router.message(CommandStart())
async def start_command(message_or_query):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è /start
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    """
    if isinstance(message_or_query, types.Message):
        user = message_or_query.from_user
    else:
        user = message_or_query.from_user
        message_or_query = message_or_query.message
    try:
        await bot.delete_message(user.id, message_or_query.message_id)
    except:
        pass

    start_photo = 'https://s3.timeweb.cloud/210a85b8-2790aa0e-77e8-4b85-92e6-2676c2ee4708/start'
    caption = (
        '‚öîÔ∏è<b> –ü—Ä–∏–≤–µ—Ç –≤–æ–∏–Ω! </b>‚öîÔ∏è\n\n–Ø - <b>—Å–µ—Ä–∂–∞–Ω—Ç –†–æ–∫—Å–∏</b>, —è –±—É–¥—É —Ç–≤–æ–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º, '
        '–ø–æ–∫–∞ —Ç—ã –Ω–µ –ø–æ–π–º—ë—à—å —á—Ç–æ –∫ —á–µ–º—É..\n\n –í –º–µ–Ω—é –Ω–∏–∂–µ —Ç—ã –Ω–∞–π–¥—ë—à—å –≤—Å—ë —á—Ç–æ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ '
        '–±—É–¥–µ—Ç –ø–æ–º–æ—â—å, –ø–µ—Ä–µ–π–¥–∏ –≤ <b>—Ä–∞–∑–¥–µ–ª "–û–±—É—á–µ–Ω–∏–µ"</b>'
    )
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.register_user(
        user.id,
        user.username, 
        user.first_name, 
        user.last_name, 
        datetime.datetime.now(),
        '–í –º–µ–Ω—é'
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    await message_or_query.answer_photo(
        photo=start_photo,
        caption=caption,
        parse_mode='HTML', reply_markup=get_start_menu_keyboard()
    )

@router.callback_query(lambda c: c.data == 'button_lk')
async def handle_lk_info(query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–∫–∏ button_lk
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ –æ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª–µ
    """
    user = query.from_user
    info_message = (
        '<b>üßæ–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüßæ</b>\n'
        '<i>----ü§µ‚Äç –ò–≥—Ä–æ–≤–æ–π ID: {}\n'
        '----üåï –ò–º—è: {}\n'
        '----üåë –§–∞–º–∏–ª–∏—è: {}</i>\n\n'
        '<b>üìñ–ü—Ä–æ–≥—Ä–µ—Å—Åüìñ</b>\n<i>----‚≠êÔ∏è –£—Ä–æ–≤–µ–Ω—å: 1\n----üíà –û–ø—ã—Ç: 0/100</i>\n\n'
        '<b>üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä</b>\n<i>----ü•á –ü–æ–±–µ–¥: 0\n----ü•à –ü–æ—Ä–∞–∂–µ–Ω–∏–π: 0</i>'
    ).format(user.id, user.first_name, user.last_name)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    await query.message.answer(
        info_message, 
        parse_mode='HTML', 
        reply_markup=get_back_keyboard()
    )

    try:
        await bot.delete_message(user.id, query.message.message_id)
    except:
        pass

@router.callback_query(lambda c: c.data == 'button_back')
async def handle_back(query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–∫–∏ button_back
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
    """
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    await start_command(query.message)
    await bot.delete_message(query.from_user.id, query.message.message_id)
